@using CBA.Models.ViewModels
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<script type="text/javascript">
    window.onload = function () {
        document.body.classList.remove("alt-menu", "sidebar-noneoverflow");
        document.body.classList.add("form");
    }
</script>
<body class="form">
    <div class="form-container">
        <div class="form-form">
            <div class="form-form-wrap">
                <div class="form-container">
                    <div class="form-content">

                        <h1 class="">Log In to <span class="brand-name">xCBA</span></h1>

                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal text-left", role = "form" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div id="username-field" class="field-wrapper input">
                                    <i data-feather="user"></i>
                                    @*<input id="username" name="username" type="text" class="form-control" placeholder="Username">*@
                                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @placeholder = "Username", @id = "username" })
                                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                                </div>

                                <div id="password-field" class="field-wrapper input mb-2">
                                    <i data-feather="lock"></i>
                                    @*<input id="password" name="password" type="password" class="form-control" placeholder="Password">*@
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "*********", @id = "password" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="d-sm-flex justify-content-between">
                                    <div class="field-wrapper toggle-pass">
                                        <p class="d-inline-block">Show Password</p>
                                        <label class="switch s-primary">
                                            <input type="checkbox" id="toggle-password" class="d-none">
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                    <div class="field-wrapper">
                                        <button type="submit" class="btn btn-primary" value="">Log In</button>
                                        @*<input type="submit" value="Log in" class="btn btn-primary" />*@
                                    </div>

                                </div>
                                <div class="field-wrapper text-center keep-logged-in">
                                    @*<div class="n-chk new-checkbox checkbox-outline-primary">
                                        <label class="new-control new-checkbox checkbox-outline-primary">
                                            <input type="checkbox" class="new-control-input">
                                            <span class="new-control-indicator"></span>Keep me logged in
                                        </label>
                                    </div>*@
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <div class="checkbox">
                                                @Html.CheckBoxFor(m => m.RememberMe)
                                                @Html.LabelFor(m => m.RememberMe)
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="field-wrapper">
                                    @*<a href="auth_pass_recovery.html" class="forgot-pass-link">Forgot Password?</a>*@
                                    @Html.ActionLink("Forgot password?", "ForgotPassword", new { @class = "forgot-pass-link" })
                                </div>

                            </div>

                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="form-image">
            <div class="l-image">
            </div>
        </div>
    </div>
</body>


@*
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>
                }
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
*@